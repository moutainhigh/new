<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/config/db.properties</value>
			</list>
		</property>
	</bean>

	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath*:/config/global.properties</value>
			</list>
		</property>
	</bean>

	<!-- druid数据库连接池配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${connection.url}" />
		<property name="driverClassName" value="${connection.driverClass}" />
		<property name="username" value="${connection.username}" />
		<property name="password" value="${connection.password}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters">
			<value>stat,wall</value>
		</property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive">
			<value>20</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>
		<property name="minIdle">
			<value>1</value>
		</property>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis">
			<value>60000</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>300000</value>
		</property>

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="validationQuery">
			<value>SELECT 'x'</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>false</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements">
			<value>true</value>
		</property>
		<property name="maxOpenPreparedStatements">
			<value>20</value>
		</property>
	</bean>

	<!--<bean id="sqlServerDataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
		  <!--init-method="init" destroy-method="close">-->
		<!--<property name="url" value="${connection.sqlServerUrl}" />-->
		<!--<property name="driverClassName" value="${connection.sqlServerDriverClass}" />-->
		<!--<property name="username" value="${connection.sqlServerUsername}" />-->
		<!--<property name="password" value="${connection.sqlServerPassword}" />-->

		<!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
		<!--<property name="filters">-->
			<!--<value>stat,wall</value>-->
		<!--</property>-->

		<!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
		<!--<property name="maxActive">-->
			<!--<value>20</value>-->
		<!--</property>-->
		<!--<property name="initialSize">-->
			<!--<value>1</value>-->
		<!--</property>-->
		<!--<property name="minIdle">-->
			<!--<value>1</value>-->
		<!--</property>-->

		<!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
		<!--<property name="maxWait">-->
			<!--<value>60000</value>-->
		<!--</property>-->

		<!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis">-->
			<!--<value>60000</value>-->
		<!--</property>-->
		<!--<property name="minEvictableIdleTimeMillis">-->
			<!--<value>300000</value>-->
		<!--</property>-->

		<!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
		<!--<property name="validationQuery">-->
			<!--<value>SELECT 'x'</value>-->
		<!--</property>-->
		<!--<property name="testWhileIdle">-->
			<!--<value>true</value>-->
		<!--</property>-->
		<!--<property name="testOnBorrow">-->
			<!--<value>false</value>-->
		<!--</property>-->
		<!--<property name="testOnReturn">-->
			<!--<value>false</value>-->
		<!--</property>-->

		<!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
		<!--<property name="poolPreparedStatements">-->
			<!--<value>true</value>-->
		<!--</property>-->
		<!--<property name="maxOpenPreparedStatements">-->
			<!--<value>20</value>-->
		<!--</property>-->
	<!--</bean>-->

	<bean id="dynamicDataSource" class="com.huayu.common.DynamicDataSource" >
		<!-- 通过key-value的形式来关联数据源 -->
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataSource" key="dataSource"></entry>
				<!--<entry value-ref="sqlServerDataSource" key="sqlServerDataSource"></entry>-->
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource" />
	</bean>

	<!-- namedParameterjdbcTemplate配置数据库源 -->
	<bean id="jdbcTemplate" class="com.ly.dao.base.BaseNamedParameterJdbcTemplate">
		<constructor-arg>
			<ref bean="dynamicDataSource" />
		</constructor-arg>
	</bean>

	<!-- 声明事务,自动管理配置数据源 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dynamicDataSource" />
		</property>
	</bean>

	<!-- 用注解来实现事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
 
</beans>